json1
str(json1)
headers(json1)
library(httr); library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", key="f856081a686f175c6fa7",secret="d7b049101b04a99cd38d7076d1a772c24af7c267")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token=github_token)
gtoken
github_token
json2 <- jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json2 <- jsonlite::fromJSON(toJSON(json1))
json1 <- content(req)
gtoken <- config(token=github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
json1 <- content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
json2
head(json2)
class(json2)
json2
names(json2)
json2$id
json2$names
names(json2)
json2$name
str(rnorm)
help(str)
class(rnorm)
atributes(rnorm)
attributes(rnorm)
json1[4]
json2 <- jsonlite::fromJSON(toJSON(json1))
names(json2)
json2$names
json2$name
json2$created_at
json2$create_at[json2$name="datasharing"]
json2$created_at[json2$name="datasharing"]
json2$created_at[json2$name=="datasharing"]
url="http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for "
x <- read.fwf(file=url(url),skip=4, widthis(c(12,7,4,9,4,9,4,9,4))
)
x <- read.fwf(file=url(url),skip=4, widths=c(12,7,4,9,4,9,4,9,4))
x
head(x)
sum(x[,4])
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for'
file.dest <- 'getdata.for'
# download from the URL
download.file(file.url, file.dest)
# load the data
getdata <- read.fwf('getdata.for', skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
# inspect data
head(getdata)
# calculate sum for column 4
sum(getdata$V4)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
desk <- getdata.for
library(sqldf)
install.packages("sqldf")
library(sqldf)
getwd()
setwd("/dropbox/coursera/3-Gettingcleaningdata")
acs <- read.csv("./getdata-data-ss06pid.csv", header=T, sep=",")
library(datasets)
data(iris)
?iris
names(iris)
iris
iris <- data(iris)
ls()
summary(iris)
names(iris)
iris
data(iris)
names(iris)
debug(ls)
ls
ls()
library(datasets)
data(iris)
names(iris)
?iris
dat <- subset(iris, specis="virginica")
dat
dat <- subset(iris, species=="virginica")
dat <- subset(iris, Species=="virginica")
dat
str(dat)
table(dat$Species)
mean(dat$"Sepal.Length")
colMean(iris)
colMeans(iris)
apply(iris,2,mean)
apply(iris,[,1:4],2,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
data(mtcars)
?mtcars
head(mtcars)
lapply(mtcars,mean)
apply(mtcars,2,mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
names(mtcars)
tapply(mtcars$cyl, mtcars$cyl,mean)
tapply(mtcars$cyl, mtcars$hp,mean)
tapply(mtcars$hp, mtcars$cyl,mean)
dat <- tapply(mtcars$hp, mtcars$cyl,mean)
dat
names(dat)
dat$4
dat$"4"
class(dat)
dat[,1]
dat[1,]
dat
abs(82.63636-209.21429)
with(mtcars, tapply(mpg,cyl, mean))
data(iris)
dat <- subset(iris, Species=="virginica")
dat
tab(dat$Species)
table(dat$Species)
names(dat)
mean(dat[,1])
pply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
abs(82.63636, 209.21429)
abs(82.63636-209.21429)
swirl()
library(swirl)
swirl()
read.csv(path2csv, stringsAsFactor=FALSE)
mydf <- read.csv(path2csv, stringsAsFactor=FALSE)
mydf <- read.csv('path2csv', stringsAsFactors=FALSE)
exit()
quit()
installed.packages()
library(swirl)
install_from_swirl('Exploratory Data Analysis')
library(swirl)
swirl()
xfig()
jpeg()
windows()
postscript()
help(xfig())
help(xfig)
help(jpeg)
help(window)
help(window)
help(windows)
help(postscript)
help(xfig)
help(with)
getwd()
?par
library(datasets)
hist(ariquality$Ozone)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
airquality <- transform(airquality, Month=factor(Month))
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)")
colors()
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="wheat3")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="wheat4")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="wheat2")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="wheat1")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="brown")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="brow2")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="brown2")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="tomato2")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="tan3")
par("lty")
par("col")
par("pch")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="white")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="green")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="blue")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="blue2")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="blue3")
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone (ppb)", col="white")
with(ariquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone), main="Ozone and Wind in New York City"))
with(airquality, plot(Wind, Ozone, main="Ozone and Wind in New York City"))
with(subset(airquality, Month==5), points(Wind, Ozone, col="blue"))
with(airquality, plot(Wind, Ozone, main="Ozone and Wind in New York City", type='n'))
with(subset(airquality, Month==5), points(Wind, Ozone, col="blue"))
with(subset(airquality, Month!=5), points(Wind, Ozone, col="red"))
legend("topright", pch=1, col=c("blue", "red"), legend=c("May", "Other Months"))
with(airquality, plot(Wind, Ozone, main="Ozone and Wind in New York City", type='n'))
with(airquality, plot(Wind, Ozone, main="Ozone and Wind in New York City", pch=20))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd=2)
par(mfrow=c(1,2))
with(airquality, {plot(Wind,Ozone, main="Ozone and Wind")
plot(Solar.R, Ozone, main="Ozone and Solar Radiation")})
plot()
?Devices
quartz()
getwd()
pd(file="myplot.pdf")
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.off()
ls()
url <-"https://archive.ics.uci.edu/ml/machine-learning-databases/00235/"
url
x <- rnorm(100)
y <- rpois(2,100) + 0.5*x
png(filename = "plot1.png",
width = 480, height = 480,
units = "px")
list.files()
plot(x,y, type="l", col="blue")
list.files()
help(png)
dev.off()
plot(x,y)
plot(x,y, type="l", col="blue")
plot(x,y, pch=20)
plot(x,y, pch=19)
plot(x,y, pch=15)
plot(x,y, pch=8)
plot(x,y, pch=2)
plot(x,y, pch=3)
plot(x,y, pch=4)
getwd()
ls.files()
list.files()
list.files()
setwd("./Dropbox/Coursera/4-EDA/Project1")
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip"
download.file(url, destfile="./power.zip", method="curl")
unzip("power.zip", overwrite=TRUE)
setwd("./ExData_Plotting1")
setwd("./Dropbox/Coursera/4-EDA/ExData_Plotting1")
getwd()
dir <- getwd()
setwd("./"dir)
power <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
power.sub$Global_active_power <- as.numeric(power.sub$Global_active_power)
png(filename="Plot1.png", width=480, heigth=480, units="px")
png(filename="Plot1.png", width=480, height=480, units="px")
hist(power.sub$Global_active_power, main="Global Active Power", xlab ="Global Active Power (kilowatts)", ylab="Frequency", col="red")
dev.copy(png, file="Plot1.png", width=480, height=480)
dev.off()
list.files()
setwd("/users/jasonabr/dropbox/coursera/4-eda/exdata_plotting1")
getwd()
list.files()
setwd("/users/jasonab/dropbox/coursera/4-eda/exdata_plotting1")
setwd("./Dropbox/Coursera/4-EDA/Project1")
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/00235/household_power_consumption.zip"
download.file(url, destfile="./power.zip", method="curl")
unzip("power.zip", overwrite=TRUE)
power <- read.table("household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
power.sub$Global_active_power <- as.numeric(power.sub$Global_active_power)
png(filename="Plot1.png", width=480, height=480, units="px")
hist(power.sub$Global_active_power, main="Global Active Power", xlab ="Global Active Power (kilowatts)", ylab="Frequency", col="red")
getwd()
list.files()
png(filename="Plot1.png", width=480, height=480, units="px")
hist(power.sub$Global_active_power, main="Global Active Power", xlab ="Global Active Power (kilowatts)", ylab="Frequency", col="red")
dev.copy(png, file="Plot1.png", width=480, height=480)
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
power.sub$Global_active_power <- as.numeric(power.sub$Global_active_power)
png(filename="Plot1.png", width=480, height=480, units="px")
hist(power.sub$Global_active_power, main="Global Active Power", xlab ="Global Active Power (kilowatts)", ylab="Frequency", col="red")
#dev.copy(png, file="Plot1.png", width=480, height=480)
dev.off()
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
png(filename="Plot1.png", width=480, height=480, units="px")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#dev.copy(png, file="Plot2.png", width=480, height=480)
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
power.sub$Global_active_power <- as.numeric(power.sub$Global_active_power)
png(filename="Plot1.png", width=480, height=480, units="px")
hist(power.sub$Global_active_power, main="Global Active Power", xlab ="Global Active Power (kilowatts)", ylab="Frequency", col="red")
#dev.copy(png, file="Plot1.png", width=480, height=480)
dev.off()
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
png(filename="Plot2.png", width=480, height=480, units="px")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
png(filename="Plot3.png", width=480, height=480, units="px")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
png(filename="Plot2.png", width=480, height=480, units="px")
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering")
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color, cex=0.75)
dev.off()
power.sub$Global_active_power <- as.numeric(power.sub$Global_active_power)
png(filename="Plot1.png", width=480, height=480, units="px")
hist(power.sub$Global_active_power, main="Global Active Power", xlab ="Global Active Power (kilowatts)", ylab="Frequency", col="red")
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007", select=c("Date","Time", "Global_active_power"))
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
png(filename="Plot2.png", width=480, height=480, units="px")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
png(filename="Plot3.png", width=480, height=480, units="px")
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering")
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
dev.off()
par(mfrow(2,2))
par(mfrow=c(2,2))
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
par(mfrow=c(2,2))
#Plot 2
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
names(power.sub)
Voltage <- as.numeric(power.sub$Voltage)
plot(DT, Voltage, type="l", xlab="datetime", ylab="Voltage")
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering")
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
GRP <- as.numeric(power.sub$Global_reactive_power)
plot(DT, GRP, type="l", xlab="dateime", ylab="Global_reactive_power")
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
par(mfrow=c(2,2))
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
par(mfrow=c(2,2))
png(filename="Plot4.png", width=480, height=480, units="px")
#Plot 1
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
#Plot 2
Voltage <- as.numeric(power.sub$Voltage)
plot(DT, Voltage, type="l", xlab="datetime", ylab="Voltage")
#Plot3
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering")
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
#Plot4
GRP <- as.numeric(power.sub$Global_reactive_power)
plot(DT, GRP, type="l", xlab="dateime", ylab="Global_reactive_power")
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
png(filename="Plot4.png", width=480, height=480, units="px")
par(mfrow=c(2,2))
#Plot 1
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
#Plot 2
Voltage <- as.numeric(power.sub$Voltage)
plot(DT, Voltage, type="l", xlab="datetime", ylab="Voltage")
#Plot3
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering")
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
#Plot4
GRP <- as.numeric(power.sub$Global_reactive_power)
plot(DT, GRP, type="l", xlab="dateime", ylab="Global_reactive_power")
dev.off()
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
png(filename="Plot4.png", width=480, height=480, units="px")
par(mfrow=c(2,2))
#Plot 1
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
#Plot 2
Voltage <- as.numeric(power.sub$Voltage)
plot(DT, Voltage, type="l", xlab="datetime", ylab="Voltage")
#Plot3
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering", cex=0.75)
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
#Plot4
GRP <- as.numeric(power.sub$Global_reactive_power)
plot(DT, GRP, type="l", xlab="dateime", ylab="Global_reactive_power")
dev.off()
head(power)
power.sub <- subset(power, Date=="1/2/2007" | Date=="2/2/2007")
png(filename="Plot4.png", width=480, height=480, units="px")
par(mfrow=c(2,2))
#Plot 1
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
#Plot 2
Voltage <- as.numeric(power.sub$Voltage)
plot(DT, Voltage, type="l", xlab="datetime", ylab="Voltage")
#Plot3
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering", cex=0.50)
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
#Plot4
GRP <- as.numeric(power.sub$Global_reactive_power)
plot(DT, GRP, type="l", xlab="dateime", ylab="Global_reactive_power")
dev.off()
help(legend)
par(mfrow=c(2,2))
#Plot 1
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
#Plot 2
Voltage <- as.numeric(power.sub$Voltage)
plot(DT, Voltage, type="l", xlab="datetime", ylab="Voltage")
#Plot3
SM1 <- as.numeric(power.sub$Sub_metering_1)
SM2 <- as.numeric(power.sub$Sub_metering_2)
SM3 <- as.numeric(power.sub$Sub_metering_3)
plot(DT, SM1, type="l", xlab="", ylab="Energy sub metering", bty="n")
lines(DT, SM2, type="l", col="red")
lines(DT, SM3, type="l", col="blue")
varnames <- names(power.sub[,7:9])
color <- c("black", "red", "blue")
legend("topright", lty=c(1,1,1), legend=varnames, col=color)
#Plot4
GRP <- as.numeric(power.sub$Global_reactive_power)
plot(DT, GRP, type="l", xlab="dateime", ylab="Global_reactive_power")
dev.off()
par(mfrow=c(2,2))
#Plot 1
GlobalActivePower <- as.numeric(power.sub$Global_active_power)
DT <- with(power.sub, paste(Date, Time))
DT <- strptime(DT, "%d/%m/%Y %H:%M:%S")
plot(DT, GlobalActivePower, type="l", xlab="", ylab="Global Active Power")
#Plot 2
